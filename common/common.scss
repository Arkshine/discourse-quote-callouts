@import "functions";

@mixin apply-if-not-empty($property, $value) {
  @if $value != "" and $value != null {
    #{$property}: #{$value};
  }
}

.rtl {
  --q-callout-fold-direction: -1;
}

.callout {
  padding: $callout_padding;
  border-radius: $callout_border_radius;
  border-left: 0;
  position: relative;

  @include apply-if-not-empty(border-width, $callout_border_width);
  @include apply-if-not-empty(border-style, $callout_border_style);
  @include apply-if-not-empty(border-color, $callout_border_color);

  & > *:last-child {
    margin-bottom: revert !important;
  }

  &.is-collapsible .callout-title {
    cursor: pointer;
  }

  .callout-title {
    display: flex;
    align-items: center;
    gap: $callout_title_gap;
    font-size: $callout_title_font_size;
    font-weight: $callout_title_font_weight;

    .callout-fold {
      font-size: small;
      display: flex;
      align-items: center;
      padding-inline-end: 8px;

      .svg-icon {
        transition: transform 100ms ease-in-out;

        &::after {
          content: "\200B";
        }
      }

      &.is-collapsed .svg-icon {
        transform: rotate(
          calc(var(--q-callout-fold-direction, 1) * -1 * 90deg)
        );
      }
    }
  }

  .callout-content {
    background: transparent;
    overflow: auto;
    transition: height 100ms cubic-bezier(0.02, 0.01, 0.47, 1);
  }

  &.is-collapsed .callout-content {
    height: 0;
  }

  .callout-icon {
    flex: 0 0 auto;
    display: flex;
    align-items: center;

    svg {
      width: $callout_icon_size;
      height: $callout_icon_size;
    }

    &::after {
      content: "\200B";
    }
  }

  .lucide {
    width: 1em;
    height: 1em;
    line-height: 1;
    display: inline-flex;
    position: relative;
  }

  $parsedSettings: parseObjectSettings($callouts);

  @each $map in $parsedSettings {
    $type: map-get($map, "type");
    $color: map-get($map, "color");
    $border_width: map-get($map, "border_width");
    $border_style: map-get($map, "border_style");
    $border_color: map-get($map, "border_color");
    $border_radius: map-get($map, "border_radius");
    $icon_size: map-get($map, "icon_size");

    &[data-callout-type="#{$type}"] {
      @include apply-if-not-empty(border-width, $border_width);
      @include apply-if-not-empty(border-style, $border_style);
      @include apply-if-not-empty(border-color, $border_color);
      @include apply-if-not-empty(border-radius, $border_radius);

      .callout-title {
        color: #{$color};

        .callout-title-inner * {
          color: #{$color};
        }

        .callout-icon svg {
          @include apply-if-not-empty(width, $icon_size);
          @include apply-if-not-empty(height, $icon_size);
        }
      }
    }
  }
}
